# day 04

# input range
lower = 264360
upper = 746325

lower_ls = [int(d) for d in str(lower)]
upper_ls = [int(d) for d in str(upper)]
# rules

# It is a six-digit number
# The value is within the range given in your puzzle input.
# Two adjacent digits are the same (like 22 in 122345).
# Going from left to right, the digits never decrease; they only ever increase or stay the same (like 111123 or 135679).

myrange  = range(lower, upper)
pool = set(range(0,9))

# initiate answer as 000000
answer = [0,0,0,0,0,0]

# work on one digit at a time
for pos in range(0,5):

    # set pool to only include numbers equal to or greater than prev digit
    curr_pool = [x for x in pool if x >= answer[-1]]

    # upper and lower bounds of number 
    curr_lower = lower_ls
    curr_lower[pos+2:] = 0 * (len(curr_lower[pos+2:]))
    curr_lower 
    
    # try each value in the pool
    for digit in curr_pool:

        entry = digit
        answer[pos] = entry

        # check if answer is in range with given digits
        concat = int(''.join(map(str,answer)))
        if 
        
        
    
